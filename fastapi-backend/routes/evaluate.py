from fastapi import APIRouter
from services.evaluation import compute_similarity, parameter_based_evaluation, generate_embedding

router = APIRouter()

# Global dictionary to store ideal embeddings (temporary; use DB for production)
# will get as input fromt the node js backend
ideal_solution_store = {
  "message": "Ideal solution stored successfully",
  "embedding": [
    -0.013905676081776619,
    0.03864181041717529,
    -0.022642312571406364,
    -0.016513701528310776,
    0.0685499832034111,
    0.052547238767147064,
    0.07088563591241837,
    0.08593523502349854,
    -0.057969436049461365,
    0.04348903149366379,
    0.02834221161901951,
    -0.04830407351255417,
    0.030962854623794556,
    0.04592441767454147,
    0.04970318824052811,
    0.050185855478048325,
    0.11353021115064621,
    0.09117351472377777,
    -0.10051937401294708,
    0.045180000364780426,
    0.005417399574071169,
    -0.008396909572184086,
    0.07732930034399033,
    0.042137011885643005,
    -0.15962785482406616,
    -0.015790073201060295,
    0.038637589663267136,
    -0.0564924031496048,
    -0.05835448205471039,
    -0.001997891813516617,
    0.03109404630959034,
    -0.007054230663925409,
    0.03787784278392792,
    0.010628719814121723,
    -0.04759260639548302,
    -0.0634770318865776,
    0.005638625007122755,
    -0.02416001260280609,
    0.0027628617826849222,
    -0.05110282078385353,
    -0.100522480905056,
    -0.08117010444402695,
    0.0072147478349506855,
    -0.0000887413916643709,
    0.0688522458076477,
    0.01641429029405117,
    0.006187142804265022,
    -0.04958898946642876,
    -0.0202889833599329,
    -0.06103794649243355,
    0.05747830867767334,
    -0.03352468088269234,
    0.09267520904541016,
    0.014020685106515884,
    -0.024077128618955612,
    -0.04140852764248848,
    0.019701385870575905,
    -0.008758935146033764,
    -0.015577999874949455,
    0.04735979437828064,
    0.003310847794637084,
    -0.03304855525493622,
    -0.031006835401058197,
    0.01758217066526413,
    -0.008601656183600426,
    -0.05672765150666237,
    -0.07066196203231812,
    -0.03310471400618553,
    0.09249413758516312,
    0.046838633716106415,
    -0.0104518448933959,
    0.026729851961135864,
    0.11164603382349014,
    -0.04080075025558472,
    0.017397217452526093,
    0.037820424884557724,
    -0.05107663944363594,
    0.03823953866958618,
    0.013069055043160915,
    -0.06115080416202545,
    -0.01040950883179903,
    -0.049466799944639206,
    0.06576735526323318,
    0.023050973191857338,
    0.04464472457766533,
    -0.019273381680250168,
    -0.03392297402024269,
    0.07682278007268906,
    -0.0268869511783123,
    0.0016788297798484564,
    -0.03215425834059715,
    0.07988150417804718,
    0.04001343622803688,
    -0.005749478004872799,
    -0.045137129724025726,
    -0.05383966490626335,
    -0.11729225516319275,
    -0.08487159758806229,
    -0.08553861081600189,
    0.02697594463825226,
    -0.01323792990297079,
    0.04417867586016655,
    -0.012617979198694229,
    0.032802291214466095,
    0.04252997785806656,
    -0.039244767278432846,
    -0.02820521965622902,
    0.0582173652946949,
    0.01783762127161026,
    0.06856266409158707,
    -0.015794631093740463,
    0.013921592384576797,
    0.01359808910638094,
    0.006980201229453087,
    -0.06982523202896118,
    0.008525354787707329,
    -0.04099379852414131,
    0.01330927200615406,
    0.11895718425512314,
    0.07314528524875641,
    0.045686058700084686,
    0.003066352568566799,
    0.06958227604627609,
    -0.02966482937335968,
    0.022688966244459152,
    -0.02457357756793499,
    -0.041135434061288834,
    -1.6400304328130624e-33,
    -0.049320392310619354,
    0.08544344455003738,
    -0.010446637868881226,
    -0.04401560127735138,
    0.04181813821196556,
    -0.060808029025793076,
    -0.06884075701236725,
    -0.04780920594930649,
    -0.040362853556871414,
    0.038122378289699554,
    -0.021425170823931694,
    0.034474629908800125,
    0.05643731355667114,
    0.002729173982515931,
    0.06984180957078934,
    -0.043129559606313705,
    -0.09504491090774536,
    0.002392950002104044,
    -0.06298341602087021,
    0.02246893011033535,
    0.06738048046827316,
    -0.16613249480724335,
    0.07172688841819763,
    0.02766823209822178,
    0.042577583342790604,
    0.050467606633901596,
    0.03898070380091667,
    -0.000548049749340862,
    0.04009970277547836,
    0.03642083704471588,
    -0.04622381553053856,
    0.05811638757586479,
    -0.029486417770385742,
    -0.02571645937860012,
    -0.06777139753103256,
    -0.030870867893099785,
    0.02232990972697735,
    -0.061560388654470444,
    -0.09843005985021591,
    -0.037460893392562866,
    -0.05553711578249931,
    -0.07609128206968307,
    -0.020343726500868797,
    -0.024894677102565765,
    0.0448734387755394,
    0.0348835289478302,
    0.06816326081752777,
    -0.04918676242232323,
    -0.05204402282834053,
    0.08301472663879395,
    -0.05681585147976875,
    0.01254225429147482,
    -0.03191050514578819,
    -0.0009545072098262608,
    -0.09732454270124435,
    -0.045470479875802994,
    0.007500814273953438,
    -0.044214341789484024,
    0.009876326657831669,
    -0.06536484509706497,
    -0.02264355681836605,
    -0.007005093619227409,
    0.004458016250282526,
    -0.06135724484920502,
    -0.0502387210726738,
    -0.07016012072563171,
    0.0639510229229927,
    0.009103945456445217,
    0.0009370766929350793,
    -0.02708105929195881,
    0.04724420607089996,
    0.06365398317575455,
    -0.01604180596768856,
    0.01175929419696331,
    -0.09517063945531845,
    0.011815940961241722,
    0.03099917806684971,
    0.022262461483478546,
    0.05893125385046005,
    -0.07840169966220856,
    0.008115886710584164,
    0.02179056406021118,
    0.020978182554244995,
    -0.06193114444613457,
    0.1793104112148285,
    -0.057758770883083344,
    -0.02897634543478489,
    -0.09147850424051285,
    -0.0893930196762085,
    0.03687093034386635,
    0.0120284054428339,
    0.003828696208074689,
    -0.06819280236959457,
    0.07308551669120789,
    -0.030832970514893532,
    -6.958353503371916e-34,
    0.053937461227178574,
    0.08376970142126083,
    -0.030255131423473358,
    -0.05262022092938423,
    0.01523388922214508,
    -0.07422658801078796,
    -0.02691829204559326,
    -0.11596903204917908,
    0.0798080638051033,
    0.0163794606924057,
    -0.09346242994070053,
    0.05960560962557793,
    0.054439231753349304,
    0.0076507097110152245,
    0.027562638744711876,
    -0.12842288613319397,
    0.07730334252119064,
    0.024605214595794678,
    -0.03108806721866131,
    0.0011320038465783,
    0.0473557785153389,
    0.013717062771320343,
    -0.10663159936666489,
    -0.034788828343153,
    -0.047298431396484375,
    0.026001252233982086,
    -0.00953652709722519,
    -0.006715886760503054,
    -0.029789786785840988,
    -0.01199572253972292,
    0.02207631804049015,
    -0.05431521683931351,
    0.024080326780676842,
    -0.033619463443756104,
    -0.011844112537801266,
    0.012085787020623684,
    0.0074974591843783855,
    -0.004350764211267233,
    -0.03844553604722023,
    0.035936690866947174,
    0.07351059466600418,
    0.0640069916844368,
    0.01883353851735592,
    -0.07977497577667236,
    -0.032946787774562836,
    -0.0010478469775989652,
    -0.08802948892116547,
    -0.03538627177476883,
    -0.08838023990392685,
    0.023391464725136757,
    0.06928044557571411,
    0.017437778413295746,
    -0.013775859959423542,
    -0.019990073516964912,
    -0.024479977786540985,
    0.02275644987821579,
    -0.0014623365132138133,
    0.008399276062846184,
    -0.0636150911450386,
    0.013533264398574829,
    0.06410408765077591,
    0.06668735295534134,
    -0.07558868080377579,
    0.08806587755680084,
    0.027659660205245018,
    -0.06655798107385635,
    -0.05829039588570595,
    -0.00017137690156232566,
    0.011289811693131924,
    -0.005080009810626507,
    -0.005994453094899654,
    0.066440649330616,
    -0.08802548050880432,
    0.0009956123540177941,
    -0.01214764453470707,
    -0.015498942695558071,
    0.03342977538704872,
    0.013171149417757988,
    0.0061193653382360935,
    -0.0037641795352101326,
    0.0004300342407077551,
    -0.048933714628219604,
    0.08256715536117554,
    0.057101547718048096,
    0.01178897637873888,
    0.006707513704895973,
    -0.055422715842723846,
    0.056531209498643875,
    0.037785474210977554,
    0.022162696346640587,
    -0.03562057018280029,
    0.10404197126626968,
    -0.07276991754770279,
    0.05316423252224922,
    -0.04495269060134888,
    -4.394752650682676e-8,
    -0.026749800890684128,
    0.01689976081252098,
    -0.04371967166662216,
    0.05740758031606674,
    0.04073520377278328,
    0.08101339638233185,
    -0.031442347913980484,
    -0.0002512279024813324,
    -0.0850469246506691,
    -0.01870371773838997,
    0.02569236233830452,
    0.039051786065101624,
    -0.01945367641746998,
    0.07282402366399765,
    -0.000006079043487261515,
    -0.041694555431604385,
    0.03932006657123566,
    0.010039001703262329,
    -0.062208715826272964,
    0.03756165876984596,
    -0.023632293567061424,
    0.03472565487027168,
    -0.020004229620099068,
    -0.014509794302284718,
    0.005637651775032282,
    -0.04141528904438019,
    -0.06127016991376877,
    0.016902819275856018,
    -0.008497335948050022,
    0.010455724783241749,
    0.017180845141410828,
    0.016140861436724663,
    0.017745153978466988,
    0.012839727103710175,
    0.05630948394536972,
    0.014876492321491241,
    0.04623568430542946,
    -0.012024739757180214,
    0.06831585615873337,
    0.08921067416667938,
    0.012813558802008629,
    -0.011021260172128677,
    -0.020186100155115128,
    0.07471523433923721,
    0.036718495190143585,
    0.05340812727808952,
    -0.10638236999511719,
    -0.061800457537174225,
    -0.04518863931298256,
    -0.0031950315460562706,
    0.00006374667282216251,
    -0.04875782132148743,
    -0.03481804206967354,
    0.10727772116661072,
    0.08213882893323898,
    0.011862133629620075,
    -0.016467520967125893,
    0.00478139566257596,
    -0.01637442596256733,
    0.05304126814007759,
    0.07144711911678314,
    0.006634705234318972,
    -0.06347750872373581,
    0.048713698983192444
  ]
}

@router.post("/store_ideal_solution/")
def store_ideal_solution(ideal_text: str):
    """
    Stores the ideal solution embeddings when a hackathon is created.
    """
    embedding = generate_embedding(ideal_text)
    ideal_solution_store["embedding"] = embedding.tolist()  # Convert NumPy array to list (JSON serializable)
    return {"message": "Ideal solution stored successfully", "embedding": embedding.tolist()}

@router.post("/submission/")
def evaluate_submission(student_text: str):
    """
    Evaluates a student’s submission using pre-stored ideal solution embeddings.
    """
    if "embedding" not in ideal_solution_store:
        return {"error": "Ideal solution embeddings not stored. Please upload first."}

    ideal_embedding = ideal_solution_store["embedding"]  # Retrieve stored ideal embeddings
    similarity_data = compute_similarity(student_text, ideal_embedding)
    parameter_scores = parameter_based_evaluation(student_text)

    return {
        "cosine_similarity": similarity_data["similarity_score"],
        "parameter_scores": parameter_scores,
        "student_embedding": similarity_data["student_embedding"]
    }




# from fastapi import APIRouter
# from services.evaluation import compute_similarity, parameter_based_evaluation

# router = APIRouter()

# @router.post("/submission/")
# def evaluate_submission(student_text: str, ideal_text: str):
#     """
#     Evaluates a student’s submission based on cosine similarity and rule-based scoring.
#     """
#     similarity_score = compute_similarity(student_text, ideal_text)
#     parameter_scores = parameter_based_evaluation(student_text)

#     return {
#         "cosine_similarity": similarity_score,
#         "parameter_scores": parameter_scores
#     }
